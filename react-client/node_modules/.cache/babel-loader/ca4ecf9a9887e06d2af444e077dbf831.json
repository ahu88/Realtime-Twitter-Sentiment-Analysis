{"ast":null,"code":"var _s = $RefreshSig$();\n\n//a custom hook that creates the socket.io-client, exposes a tweet object, and whenever a new tweet is received - will add to the array of all tweets\nimport React, { useState, useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\nconst ENDPOINT = \"http://localhost:4001/\";\n\nfunction useTweets() {\n  _s();\n\n  //received tweets from server  \n  const [tweets, setTweets] = useState(\"\"); //create WebSocket connection with server\n\n  const socket = io(ENDPOINT, {\n    withCredentials: true,\n    extraHeaders: {\n      \"my-custom-header\": \"abcd\"\n    }\n  }); //handle tweet events\n\n  useEffect(() => {\n    socket.on(\"tweet\", tweet => {\n      console.log(tweet); //object that represents the tweet data to display\n\n      const tweetData = {\n        id: tweet.data.id,\n        text: tweet.data.text,\n        username: `@${tweet.includes.users[0].username}`\n      };\n      setTweets(tweetData);\n    });\n    return () => socket.disconnect();\n  }, []);\n  return tweets;\n}\n\n_s(useTweets, \"WSMC7YpYDO5JQeudIOdTOFB8Z30=\");\n\nexport default useTweets;","map":{"version":3,"sources":["E:/Documents/Side Projects/tweet-app/react-client/src/utils/useTweets.js"],"names":["React","useState","useEffect","io","ENDPOINT","useTweets","tweets","setTweets","socket","withCredentials","extraHeaders","on","tweet","console","log","tweetData","id","data","text","username","includes","users","disconnect"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAAQC,EAAR,QAAiB,kBAAjB;AACA,MAAMC,QAAQ,GAAG,wBAAjB;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACjB;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC,CAFiB,CAIjB;;AACA,QAAMO,MAAM,GAAGL,EAAE,CAACC,QAAD,EAAY;AACzBK,IAAAA,eAAe,EAAE,IADQ;AAEzBC,IAAAA,YAAY,EAAE;AACV,0BAAoB;AADV;AAFW,GAAZ,CAAjB,CALiB,CAYjB;;AACAR,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,MAAM,CAACG,EAAP,CAAU,OAAV,EAAoBC,KAAD,IAAW;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAD0B,CAG1B;;AACA,YAAMG,SAAS,GAAG;AACdC,QAAAA,EAAE,EAAGJ,KAAK,CAACK,IAAN,CAAWD,EADF;AAEdE,QAAAA,IAAI,EAAGN,KAAK,CAACK,IAAN,CAAWC,IAFJ;AAGdC,QAAAA,QAAQ,EAAI,IAAGP,KAAK,CAACQ,QAAN,CAAeC,KAAf,CAAqB,CAArB,EAAwBF,QAAS;AAHlC,OAAlB;AAMAZ,MAAAA,SAAS,CAACQ,SAAD,CAAT;AACH,KAXD;AAaA,WAAO,MAAMP,MAAM,CAACc,UAAP,EAAb;AACH,GAfQ,EAeN,EAfM,CAAT;AAiBA,SAAOhB,MAAP;AACH;;GA/BQD,S;;AAiCT,eAAeA,SAAf","sourcesContent":["//a custom hook that creates the socket.io-client, exposes a tweet object, and whenever a new tweet is received - will add to the array of all tweets\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {io} from \"socket.io-client\";\r\nconst ENDPOINT = \"http://localhost:4001/\";\r\n\r\nfunction useTweets() {\r\n    //received tweets from server  \r\n    const [tweets, setTweets] = useState(\"\");\r\n\r\n    //create WebSocket connection with server\r\n    const socket = io(ENDPOINT , {\r\n        withCredentials: true,\r\n        extraHeaders: {\r\n            \"my-custom-header\": \"abcd\"\r\n        }\r\n    });\r\n\r\n    //handle tweet events\r\n    useEffect(() => {\r\n        socket.on(\"tweet\", (tweet) => {\r\n            console.log(tweet)\r\n\r\n            //object that represents the tweet data to display\r\n            const tweetData = {\r\n                id : tweet.data.id,\r\n                text : tweet.data.text,\r\n                username : `@${tweet.includes.users[0].username}`\r\n            }\r\n\r\n            setTweets(tweetData)\r\n        });\r\n\r\n        return () => socket.disconnect();\r\n    }, []);\r\n\r\n    return tweets;\r\n}\r\n\r\nexport default useTweets;\r\n\r\n"]},"metadata":{},"sourceType":"module"}