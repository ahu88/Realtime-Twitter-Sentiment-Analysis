{"ast":null,"code":"var _jsxFileName = \"E:\\\\Documents\\\\Side Projects\\\\tweet-app\\\\react-client\\\\src\\\\HomePage\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport useTweets from \"../utils/useTweets\";\nimport { useState, useRef, useEffect } from \"react\";\nimport axios from 'axios'; //to make api calls\n\nimport { Form, FormGroup, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HomePage = () => {\n  _s();\n\n  const [rules, setRules] = useState(\"\"); //state var to set the rules for tweet stream\n\n  const tweets = useTweets(); // useTweets() is a hook that will update the 'tweets' array with new tweets as soon as it is received from the socket\n  //function to handle form submission event\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    alert(`Submitting Rule ${rules}`); // axios.post(\"http://localhost:4001/\", {\n    // \trules: rules\n    // });\n\n    axios.post(\"/\", {\n      rules: rules\n    }).then().catch(err => {\n      console.log(\"error\");\n    });\n  };\n\n  return (\n    /*#__PURE__*/\n    //print out list of tweets in real-time as they are updated by useTweets hook\n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [\"  \", /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Keyword\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 6\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              placeholder: \"Enter keyword to search for\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 6\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: rules,\n              onChange: e => setRules(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 6\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"tweetStream\",\n          children: tweets.map(tweet => /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card my-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                class: \"card-title\",\n                children: tweet.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 8\n              }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                class: \"card-subtitle mb-2 text-muted\",\n                children: tweet.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 8\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                class: \"btn btn-primary mt-3\",\n                href: \"https://twitter.com/\" + tweet.username + \"/status/\" + tweet.id,\n                target: \"_blank\",\n                children: \"Go To Tweet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 8\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 7\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 3\n    }, this)\n  );\n};\n\n_s(HomePage, \"FH5BoQLYV5EdGWYQNMagkIDhTXs=\", false, function () {\n  return [useTweets];\n});\n\n_c = HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["E:/Documents/Side Projects/tweet-app/react-client/src/HomePage/index.jsx"],"names":["React","useTweets","useState","useRef","useEffect","axios","Form","FormGroup","Button","HomePage","rules","setRules","tweets","handleSubmit","evt","preventDefault","alert","post","then","catch","err","console","log","e","target","value","map","tweet","text","username","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAA2B;;AAC3B,SAAQC,IAAR,EAAcC,SAAd,EAAyBC,MAAzB,QAAsC,iBAAtC;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC7B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC,CAD6B,CACW;;AACrC,QAAMU,MAAM,GAAGX,SAAS,EAAxB,CAF0B,CAEC;AAE9B;;AACA,QAAMY,YAAY,GAAIC,GAAD,IAAS;AAC7BA,IAAAA,GAAG,CAACC,cAAJ;AACAC,IAAAA,KAAK,CAAE,mBAAkBN,KAAM,EAA1B,CAAL,CAF6B,CAI7B;AACA;AACA;;AACAL,IAAAA,KAAK,CAACY,IAAN,CAAW,GAAX,EAAgB;AACfP,MAAAA,KAAK,EAAEA;AADQ,KAAhB,EAEGQ,IAFH,GAEUC,KAFV,CAEiBC,GAAD,IAAS;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,KAJD;AAMA,GAbD;;AAeG;AAAA;AACF;AACA;AAAA,6BACC;AAAK,QAAA,KAAK,EAAC,WAAX;AAAA,gCAGC;AAAM,UAAA,QAAQ,EAAET,YAAhB;AAAA,wCACA,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,MAAtB;AAAA,oCACC,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,eAEC,QAAC,IAAD,CAAM,OAAN;AAAc,cAAA,WAAW,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,oBAFD,eAGC;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,KAAK,EAAEH,KAA1B;AAAiC,cAAA,QAAQ,EAAEa,CAAC,IAAIZ,QAAQ,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV;AAAxD;AAAA;AAAA;AAAA;AAAA,oBAHD;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAMA,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,SAAhB;AAA0B,YAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHD,eAsBC;AAAK,UAAA,EAAE,EAAC,aAAR;AAAA,oBACEb,MAAM,CAACc,GAAP,CAAYC,KAAD,iBACX;AAAK,YAAA,KAAK,EAAE,WAAZ;AAAA,mCACA;AAAK,cAAA,KAAK,EAAC,WAAX;AAAA,sCACC;AAAI,gBAAA,KAAK,EAAC,YAAV;AAAA,0BAAwBA,KAAK,CAACC;AAA9B;AAAA;AAAA;AAAA;AAAA,sBADD,eAEC;AAAI,gBAAA,KAAK,EAAC,+BAAV;AAAA,0BAA2CD,KAAK,CAACE;AAAjD;AAAA;AAAA;AAAA;AAAA,sBAFD,eAIC;AAAG,gBAAA,KAAK,EAAC,sBAAT;AAAgC,gBAAA,IAAI,EAAE,yBAAyBF,KAAK,CAACE,QAA/B,GAA0C,UAA1C,GAAuDF,KAAK,CAACG,EAAnG;AAAuG,gBAAA,MAAM,EAAC,QAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBADA;AADF;AAAA;AAAA;AAAA;AAAA,gBAtBD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AAFE;AA0CH,CA9DM;;GAAMrB,Q;UAEMR,S;;;KAFNQ,Q","sourcesContent":["import React from \"react\";\r\nimport useTweets from \"../utils/useTweets\"\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport axios from 'axios'; //to make api calls\r\nimport {Form, FormGroup, Button} from \"react-bootstrap\"\r\n\r\nexport const HomePage = () => {\r\n\tconst [rules, setRules] = useState(\"\"); //state var to set the rules for tweet stream\r\n    const tweets = useTweets() // useTweets() is a hook that will update the 'tweets' array with new tweets as soon as it is received from the socket\r\n\r\n\t//function to handle form submission event\r\n\tconst handleSubmit = (evt) => {\r\n\t\tevt.preventDefault();\r\n\t\talert(`Submitting Rule ${rules}`)\r\n\r\n\t\t// axios.post(\"http://localhost:4001/\", {\r\n\t\t// \trules: rules\r\n\t\t// });\r\n\t\taxios.post(\"/\", {\r\n\t\t\trules: rules\r\n\t\t}).then().catch((err) => {\r\n\t\t\tconsole.log(\"error\");\r\n\t\t});\r\n\r\n\t}\r\n\r\n    return (\r\n\t\t//print out list of tweets in real-time as they are updated by useTweets hook\r\n\t\t<div>\r\n\t\t\t<div class=\"container\">\r\n\r\n\r\n\t\t\t\t<form onSubmit={handleSubmit}>  {/* when onSubmit event happens, call the handleSubmit function */}\r\n\t\t\t\t<Form.Group className=\"mb-3\">\r\n\t\t\t\t\t<Form.Label>Keyword</Form.Label>\r\n\t\t\t\t\t<Form.Control placeholder=\"Enter keyword to search for\" />\r\n\t\t\t\t\t<input type=\"text\" value={rules} onChange={e => setRules(e.target.value)} />\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<Button variant=\"primary\" type=\"submit\">\r\n\t\t\t\t\tSubmit\r\n\t\t\t\t</Button>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t{/* <label>\r\n\t\t\t\t\t\tRule:\r\n\t\t\t\t\t\t<input type=\"text\" value={rules} onChange={e => setRules(e.target.value)} />  {/* value is the state rules, onChange event will change the state to value submitted*/}\r\n\t\t\t\t\t{/* </label>\r\n\t\t\t\t\t<input type=\"submit\" value=\"Submit\" /> */}\r\n\r\n\t\t\t\t</form>\r\n\r\n\t\t\t\t<div id=\"tweetStream\">\r\n\t\t\t\t\t{tweets.map((tweet) => (\r\n\t\t\t\t\t\t<div class =\"card my-4\">\r\n\t\t\t\t\t\t<div class=\"card-body\">\r\n\t\t\t\t\t\t\t<h5 class=\"card-title\">{tweet.text}</h5>\r\n\t\t\t\t\t\t\t<h6 class=\"card-subtitle mb-2 text-muted\">{tweet.username}</h6>\r\n\r\n\t\t\t\t\t\t\t<a class=\"btn btn-primary mt-3\" href={\"https://twitter.com/\" + tweet.username + \"/status/\" + tweet.id} target=\"_blank\">\r\n\t\t\t\t\t\t\t\tGo To Tweet\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}