{"ast":null,"code":"var _jsxFileName = \"E:\\\\Documents\\\\Side Projects\\\\tweet-app-git\\\\react-client\\\\src\\\\pages\\\\SentimentPage\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useRef, useEffect } from \"react\";\nimport axios from 'axios'; //to make api calls\n\nimport { Form, FormGroup, Button } from \"react-bootstrap\";\nimport '../../App.css';\nimport { twitterSentiment } from '../../utils/sentimentAnalysis';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SentimentPage = () => {\n  _s();\n\n  const [query, setQuery] = useState(\"\"); //state var to hold user inputted query to send to backend\n\n  const [tweets, setTweets] = useState([]); //state array to hold 20 tweets returned by post request\n\n  let twitterData = []; //urls for pre-trained sentiment model\n\n  const urls = {\n    model: 'https://storage.googleapis.com/tfjs-models/tfjs/sentiment_cnn_v1/model.json',\n    metadata: 'https://storage.googleapis.com/tfjs-models/tfjs/sentiment_cnn_v1/metadata.json'\n  }; //function to handle form submission event -> send post request to backend\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    alert(`Submitting Query: ${query}`);\n    axios.post('/sentiment', {\n      query: query\n    }).then(function (response) {\n      //console.log(response.data);\n      setTweets(response.data); //set tweets state var to the arr of 20 tweets returned by this request\n    }).catch(function (err) {\n      console.log(\"error\");\n    }); //PERFORM SENTIMENT ANALYSIS ON THE DATA RETURNED (20 most recent tweets of the submitted hashtag)\n    //var twitterData = [];\n    //USE A CALLBACK SO THAT WE WAIT FOR RESULT OF twitterSentiment() BEFORE PROCEEDING, ELSE TWITTERDATA WILL BE EMPTY ...  https://stackoverflow.com/questions/13455134/javascript-doesnt-seem-to-wait-for-return-values/13455303\n\n    twitterSentiment(tweets, function (twitter_data) {\n      twitterData = twitter_data; //console.log(\"123123: \" + twitterData);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        class: \"rules-form\",\n        onSubmit: handleSubmit,\n        children: [\"  \", /*#__PURE__*/_jsxDEV(\"h1\", {\n          class: \"display-6\",\n          children: \"Sentiment Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Keyword\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            value: query,\n            onChange: e => setQuery(e.target.value),\n            placeholder: \"Enter hashtag\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"tweetStream\",\n        children: tweets.map(tweet => /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card my-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              class: \"card-title\",\n              children: tweet.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"tweetStream\",\n        children: tweets.map(tweet => /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card my-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              class: \"card-title\",\n              children: tweet.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SentimentPage, \"DhL253mtsQLDbuTOjQThR4nKSvk=\");\n\n_c = SentimentPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SentimentPage\");","map":{"version":3,"sources":["E:/Documents/Side Projects/tweet-app-git/react-client/src/pages/SentimentPage/index.jsx"],"names":["React","useState","useRef","useEffect","axios","Form","FormGroup","Button","twitterSentiment","SentimentPage","query","setQuery","tweets","setTweets","twitterData","urls","model","metadata","handleSubmit","evt","preventDefault","alert","post","then","response","data","catch","err","console","log","twitter_data","e","target","value","map","tweet","text"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport axios from 'axios'; //to make api calls\r\nimport { Form, FormGroup, Button } from \"react-bootstrap\"\r\nimport '../../App.css'\r\nimport {twitterSentiment} from '../../utils/sentimentAnalysis'\r\n\r\nexport const SentimentPage = () => {\r\n    const [query, setQuery] = useState(\"\"); //state var to hold user inputted query to send to backend\r\n    const [tweets, setTweets] = useState([]); //state array to hold 20 tweets returned by post request\r\n    let twitterData = [];\r\n\r\n    //urls for pre-trained sentiment model\r\n    const urls = {\r\n        model: 'https://storage.googleapis.com/tfjs-models/tfjs/sentiment_cnn_v1/model.json',\r\n        metadata: 'https://storage.googleapis.com/tfjs-models/tfjs/sentiment_cnn_v1/metadata.json'\r\n    };\r\n\r\n    //function to handle form submission event -> send post request to backend\r\n\tconst handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n\t\talert(`Submitting Query: ${query}`)\r\n\r\n\t\taxios.post('/sentiment', {\r\n\t\t\tquery: query\r\n\t\t})\r\n        .then(function(response){\r\n            //console.log(response.data);\r\n            setTweets(response.data); //set tweets state var to the arr of 20 tweets returned by this request\r\n        })\r\n        .catch(function(err){\r\n\t\t\tconsole.log(\"error\");\r\n\t\t});\r\n\r\n\r\n        //PERFORM SENTIMENT ANALYSIS ON THE DATA RETURNED (20 most recent tweets of the submitted hashtag)\r\n        //var twitterData = [];\r\n        //USE A CALLBACK SO THAT WE WAIT FOR RESULT OF twitterSentiment() BEFORE PROCEEDING, ELSE TWITTERDATA WILL BE EMPTY ...  https://stackoverflow.com/questions/13455134/javascript-doesnt-seem-to-wait-for-return-values/13455303\r\n        twitterSentiment(tweets, function(twitter_data) {\r\n            twitterData = twitter_data;\r\n            //console.log(\"123123: \" + twitterData);\r\n        })\r\n\t}\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div class=\"container\">\r\n                {/* form for user inputted hashtag -> do sentiment analysis on this tag*/}\r\n\t\t\t\t<form class=\"rules-form\" onSubmit={handleSubmit}>  {/* when onSubmit event happens, call the handleSubmit function */}\r\n                    <h1 class=\"display-6\">Sentiment Analysis</h1>\r\n\t\t\t\t\t<Form.Group className=\"mb-3\">\r\n\t\t\t\t\t\t<Form.Label>Keyword</Form.Label>\r\n\t\t\t\t\t\t<Form.Control value={query} onChange={e => setQuery(e.target.value)} placeholder=\"Enter hashtag\" />\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t<Button variant=\"primary\" type=\"submit\">\r\n\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</form>\r\n\r\n\r\n                {/* print out list of tweets in real-time as they are updated by useTweets hook */}\r\n\t\t\t\t<div id=\"tweetStream\">\r\n\t\t\t\t\t{tweets.map((tweet) => (\r\n                        <div class=\"card my-4\">\r\n                            <div class=\"card-body\">\r\n                                <h5 class=\"card-title\">{tweet.text}</h5>\r\n                            </div>\r\n                        </div>\r\n\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n                <div id=\"tweetStream\">\r\n\t\t\t\t\t{tweets.map((tweet) => (\r\n                        <div class=\"card my-4\">\r\n                            <div class=\"card-body\">\r\n                                <h5 class=\"card-title\">{tweet.text}</h5>\r\n                            </div>\r\n                        </div>\r\n\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}